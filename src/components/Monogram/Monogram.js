import { forwardRef, useId } from 'react';
import { classes } from 'utils/style';
import styles from './Monogram.module.css';

export const Monogram = forwardRef(({ highlight, className, ...props }, ref) => {
  const id = useId();
  const clipId = `${id}monogram-clip`;

  return (
    // <svg
    //   aria-hidden
    //   className={classes(styles.monogram, className)}
    //   width="46"
    //   height="29"
    //   viewBox="0 0 46 29"
    //   ref={ref}
    //   {...props}
    // >
    //   <defs>
    //     <clipPath id={clipId}>
    //       <path d="M16.525 28.462l7.18-18.35.003-.001 9.72 18.442a.838.838 0 001.524-.093l3.39-8.824a.846.846 0 00-.04-.686L30.307 3.605A6.698 6.698 0 0024.367 0h-4.6a.84.84 0 00-.74 1.23l3.63 6.887-3.655 9.15-7.12-13.662A6.698 6.698 0 005.942 0h-4.6a.842.842 0 00-.748 1.23L15 28.554a.839.839 0 001.524-.092zM42.392 8.806a.835.835 0 00.387-.446v.001l2.67-7.23a.838.838 0 00-.785-1.129h-6.578a.837.837 0 00-.736 1.238l3.907 7.226c.22.41.729.56 1.135.34z" />
    //     </clipPath>
    //   </defs>
    //   <rect clipPath={`url(#${clipId})`} width="100%" height="100%" />
    //   {highlight && (
    //     <g clipPath={`url(#${clipId})`}>
    //       <rect className={styles.highlight} width="100%" height="100%" />
    //     </g>
    //   )}
    // </svg>

    <svg 
      aria-hidden
      className={classes(styles.monogram, className)}
      width="30"
      height="44"
      viewBox="0 0 30 44"
      ref={ref}
      {...props}
    >
      <defs>
        <clipPath id={clipId}>
          <path d="M15.4277 0.135526C15.3761 0.234895 15.3478 1.88124 15.357 4.25953C15.3741 8.75517 15.1564 8.20306 17.024 8.48677C19.5393 8.86885 22.2003 10.3407 23.439 12.0347C23.7732 12.4918 23.8797 12.4946 24.3828 12.0593C24.6039 11.868 25.7739 10.867 26.9829 9.83491C28.1919 8.80288 29.2012 7.93556 29.2259 7.90765C29.2505 7.87984 29.4424 7.72305 29.652 7.55923C30.1347 7.18237 30.1331 7.16716 29.5346 6.4659C26.3694 2.75684 21.581 0.429403 16.2912 0.0289557C15.5928 -0.0239692 15.5048 -0.0130777 15.4277 0.135526ZM0.425967 12.5808C0.248233 12.6298 0.203643 12.6976 0.211179 12.9074C0.362177 17.1263 2.11969 20.2694 5.62727 22.5938C7.47486 23.8182 9.43424 24.6358 14.3141 26.2189C19.2319 27.8144 21.4203 29.3142 21.4203 31.089C21.4203 31.4535 21.5975 31.4697 25.6517 31.4756C30.1203 31.4821 29.8209 31.5389 29.7247 30.7023C29.5195 28.9166 29.499 28.7995 29.2226 27.8285C27.9185 23.2472 24.6778 20.6698 17.2483 18.3048C12.143 16.6796 10.5823 15.9732 9.50404 14.7998C9.10147 14.3616 8.59061 13.3982 8.59052 13.0768C8.59034 12.5632 8.70006 12.5775 4.50497 12.547C2.3849 12.5315 0.549331 12.5468 0.425967 12.5808ZM4.36267 32.983C3.45579 33.7552 2.2697 34.7647 1.7269 35.2262C-0.488991 37.11 -0.411115 36.761 1.04772 38.2716C4.34374 41.6845 9.55823 44 13.9484 44C15.1017 44 14.7295 35.7995 13.5698 35.6622C10.6763 35.3192 8.17144 34.0657 6.63419 32.191C6.01441 31.4352 6.29532 31.3372 4.36267 32.983Z"/>
        </clipPath>
      </defs>
      <rect clipPath={`url(#${clipId})`} width="100%" height="100%" />
        {highlight && (
          <g clipPath={`url(#${clipId})`}>
            <rect className={styles.highlight} width="100%" height="100%" />
          </g>
      )}
    </svg>
  );
});
